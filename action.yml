name: "Wittig - Deploy"
author: "info@wittig.nl"
description: "-"
inputs:
  # General
  ARCHIVE:
    description: 'Store the build artifacts'
    required: false
    default: false
  # Env decryption
  DOTENV_ENVIRONMENT:
    description: 'The environment of the key in the .env.keys file to decrypt the .env file'
    required: true
  DOTENV_KEY_FILE_CONTENT:
    description: 'The contents for the key in the .env.keys file to decrypt the .env files'
    required: true
  DOTENV_FILES_PATH:
    description: 'The path for the .env files'
    required: false
    default: './packages/backend'
  DOTENV_KEY_FILE_PATH:
    description: 'The path for the .env.keys file to decrypt the .env files'
    required: false
    default: './packages/backend/.env.keys'
  # Deploy server
  DEPLOY_SSH_HOST:
    description: 'The SSH server to deploy to'
    required: true
  DEPLOY_SSH_USERNAME:
    description: 'The SSH username to deploy with'
    required: true
  DEPLOY_SSH_KEY:
    description: 'The SSH private key to deploy with'
    required: true
  DEPLOY_PATH:
    description: 'The path to deploy to on the target server'
    required: true
  DEPLOY_SCRIPT_AFTER:
    description: 'The script to run after the deployment has succeeded'
    required: false
  # Deploy Proxy
  DEPLOY_PROXY_SSH_HOST:
    description: 'the SSH host of the deploy proxy (jump server)'
    required: true
  DEPLOY_PROXY_SSH_PORT:
    description: 'The SSH port of the deploy proxy (jump server)'
    required: true
  DEPLOY_PROXY_SSH_USERNAME:
    description: 'The SSH username of the deploy proxy (jump server)'
    required: true
  DEPLOY_PROXY_SSH_KEY:
    description: 'The SSH private key to connect to the deploy proxy (jump server)'
    required: true
runs:
  using: "composite"
  steps:
    - name: 'Archive build'
      uses: actions/upload-artifact@v4
      if: ${{ inputs.ARCHIVE == true }}
      with:
        name: deployment
        path: |
          ./packages/**/dist
          !./packages/**/node_modules

    - name: 'Decrypt backend .env files'
      shell: bash
      run: |
        echo "${{ inputs.DOTENV_KEY_FILE_CONTENT }}" > ${{ inputs.DOTENV_KEY_FILE_PATH }}
        pnpm run env:decrypt
        rm ${{ inputs.DOTENV_KEY_FILE_PATH }}
        mv ${{ inputs.DOTENV_FILES_PATH }}/.env.${{ inputs.DOTENV_ENVIRONMENT }} ${{ inputs.DOTENV_FILES_PATH }}/.env
        rm ${{ inputs.DOTENV_FILES_PATH }}/.env.*

    - name: 'Prepare deploy proxy ssh key'
      shell: bash
      run: |
        mkdir -p ~/.ssh
        echo "${{ inputs.DEPLOY_PROXY_SSH_KEY }}" > ~/.ssh/id_deploy
        chmod 700 ~/.ssh/id_deploy

    - name: 'Deploy to Server'
      uses: easingthemes/ssh-deploy@main
      with:
        REMOTE_HOST: ${{ inputs.DEPLOY_SSH_HOST }}
        REMOTE_USER: ${{ inputs.DEPLOY_SSH_USERNAME }}
        SSH_PRIVATE_KEY: ${{ inputs.DEPLOY_SSH_KEY }}
        ARGS: "-rlgoDzvc -i --delete"
        SOURCE: "."
        TARGET: ${{ inputs.DEPLOY_PATH }}
        EXCLUDE: "/node_modules/, /**/node_modules/, /.git/, /**/.git/, /**/src/"
        SSH_CMD_ARGS: "-o StrictHostKeyChecking=no, -o ProxyCommand='ssh -o StrictHostKeyChecking=no -p ${{ inputs.DEPLOY_PROXY_SSH_PORT }} -i ~/.ssh/id_deploy -W %h:%p ${{ inputs.DEPLOY_PROXY_SSH_USERNAME }}@${{ inputs.DEPLOY_PROXY_SSH_HOST }}'"
        #SCRIPT_AFTER: ${{ inputs.DEPLOY_SCRIPT_AFTER }}

    - name: 'Running post deploy scripting hook'
      if: ${{ inputs.DEPLOY_SCRIPT_AFTER != '' }}
      shell: bash
      run: |
        echo '${{ inputs.DEPLOY_SSH_KEY }}' > ~/.ssh/id_tmp
        chmod 600 ~/.ssh/id_tmp
        ssh -i ~/.ssh/id_tmp -o StrictHostKeyChecking=no -o ProxyCommand='ssh -o StrictHostKeyChecking=no -p ${{ inputs.DEPLOY_PROXY_SSH_PORT }} -i ~/.ssh/id_deploy -W %h:%p ${{ inputs.DEPLOY_PROXY_SSH_USERNAME }}@${{ inputs.DEPLOY_PROXY_SSH_HOST }}' ${{ inputs.DEPLOY_SSH_USERNAME }}@${{ inputs.DEPLOY_SSH_HOST }} "bash -ilc '${{ inputs.DEPLOY_SCRIPT_AFTER }}'"
        rm ~/.ssh/id_tmp
